import abc
import os
import docx
import PyPDF2

# Abstract Base Class for reading files
class FileReader(abc.ABC):
    
    @abc.abstractmethod
    def read(self, file_path):
        """
        Abstract method to read a file.
        Subclasses should implement this method based on the file type.
        """
        pass


# Class to read .txt files
class TxtFileReader(FileReader):
    
    def read(self, file_path):
        with open(file_path, 'r', encoding='utf-8') as file:
            return file.read()


# Class to read .docx files
class DocxFileReader(FileReader):
    
    def read(self, file_path):
        doc = docx.Document(file_path)
        full_text = []
        for paragraph in doc.paragraphs:
            full_text.append(paragraph.text)
        return '\n'.join(full_text)


# Class to read .pdf files
class PdfFileReader(FileReader):
    
    def read(self, file_path):
        with open(file_path, 'rb') as file:
            reader = PyPDF2.PdfReader(file)
            text = ""
            for page_num in range(len(reader.pages)):
                page = reader.pages[page_num]
                text += page.extract_text()
        return text


# Factory function to create the appropriate reader based on file type
def create_file_reader(file_path):
    extension = os.path.splitext(file_path)[1].lower()
    if extension == ".txt":
        return TxtFileReader()
    elif extension == ".docx":
        return DocxFileReader()
    elif extension == ".pdf":
        return PdfFileReader()
    else:
        raise ValueError("Unsupported file format")


# Example usage:
file_path = input("Enter the path of the file (with extension): ")

# Check if file exists
if os.path.isfile(file_path):
    reader = create_file_reader(file_path)
    file_data = reader.read(file_path)
    print(file_data)
else:
    print(f"The file '{file_path}' does not exist. Please check the path.")
